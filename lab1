#include <iostream>
#include <vector>
#include <unordered_set>
#include <algorithm>

using namespace std;

void convertSecondsToHMS(int total_seconds) {
    int hours = total_seconds / 3600;
    int remaining = total_seconds % 3600;
    int minutes = remaining / 60;
    int seconds = remaining % 60;
    cout << hours << ":" << minutes << ":" << seconds << endl;
}

void swapUsingPointers(int* ptr1, int* ptr2) {
    int temporary = *ptr1;
    *ptr1 = *ptr2;
    *ptr2 = temporary;
}

void swapUsingReferences(int& ref1, int& ref2) {
    int temp = ref1;
    ref1 = ref2;
    ref2 = temp;
}

void deduplicateArray(int array[], int& size) {
    unordered_set<int> unique_elements;
    int new_index = 0;
    for (int i = 0; i < size; i++) {
        if (unique_elements.count(array[i]) == 0) {
            unique_elements.insert(array[i]);
            array[new_index] = array[i];
            new_index++;
        }
    }
    size = new_index;
}

void deduplicateVector(vector<int>& numbers) {
    unordered_set<int> seen_numbers;
    auto new_end = remove_if(numbers.begin(), numbers.end(), 
        [&seen_numbers](int n) {
            return !seen_numbers.insert(n).second;
        });
    numbers.erase(new_end, numbers.end());
}

int main() {
    // Task 1
    int input_seconds = 124660;
    cout << "Task 1 output: ";
    convertSecondsToHMS(input_seconds);

    // Task 2
    int a = 5, b = 10;
    cout << "Before swap: a = " << a << ", b = " << b << endl;
    swapUsingPointers(&a, &b);
    cout << "After pointer swap: a = " << a << ", b = " << b << endl;
    
    a = 5, b = 10;
    swapUsingReferences(a, b);
    cout << "After reference swap: a = " << a << ", b = " << b << endl;

    // Task 3
    int data[] = {1, 3, 5, 3, 3, 4, 1, 2};
    int data_size = sizeof(data) / sizeof(data[0]);
    deduplicateArray(data, data_size);
    cout << "Task 3a output: ";
    for (int i = 0; i < data_size; i++) {
        cout << data[i] << " ";
    }
    cout << endl;

    vector<int> numbers = {1, 3, 5, 3, 3, 4, 1, 2};
    deduplicateVector(numbers);
    cout << "Task 3b output: ";
    for (int num : numbers) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
